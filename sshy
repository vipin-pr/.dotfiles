#!/bin/bash

SSH_CONFIG="$HOME/.ssh/config"

list_hosts() {
    grep '^Host ' "$SSH_CONFIG" | awk '{print $2}'
}

select_host() {
    mapfile -t hosts < <(list_hosts)
    if [ ${#hosts[@]} -eq 0 ]; then
        echo "No hosts found in ~/.ssh/config"
        return
    fi

    echo "Select a host to SSH into:"
    select host in "${hosts[@]}"; do
        if [[ -n "$host" ]]; then
            echo "Connecting to $host..."
            ssh "$host"
            break
        else
            echo "Invalid selection"
        fi
    done
}

add_host() {
    read -p "Enter a name for the host (e.g., dev-server): " name
    read -p "Enter the hostname or IP: " hostname
    read -p "Enter the SSH username: " user
    read -p "Enter the path to your private key (leave blank for password auth): " key

    echo -e "\nHost $name\n    HostName $hostname\n    User $user" >> "$SSH_CONFIG"

    if [[ -n "$key" ]]; then
        echo "    IdentityFile $key" >> "$SSH_CONFIG"
    fi

    echo "Host added!"
}

remove_host() {
    mapfile -t hosts < <(list_hosts)
    echo "Select a host to remove:"
    select host in "${hosts[@]}"; do
        if [[ -n "$host" ]]; then
            sed -i "/^Host $host$/,/^Host /{/^Host $host$/d;/^Host /q}" "$SSH_CONFIG"
            echo "Host $host removed."
            break
        else
            echo "Invalid selection"
        fi
    done
}

edit_config() {
    ${EDITOR:-nano} "$SSH_CONFIG"
}

while true; do
    echo -e "\n=== SSH Menu ==="
    echo "1) List & Connect to Host"
    echo "2) Add New Host"
    echo "3) Remove Host"
    echo "4) Edit Config Manually"
    echo "5) Exit"
    read -p "Choose an option: " choice

    case $choice in
        1) select_host ;;
        2) add_host ;;
        3) remove_host ;;
        4) edit_config ;;
        5) break ;;
        *) echo "Invalid option." ;;
    esac
done